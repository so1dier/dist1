
#drop procedure adjust;
drop table transactions;
drop table accounts;



CREATE TABLE accounts
(
	account_id int PRIMARY KEY NOT NULL,
	balance decimal(15,2)
);

CREATE TABLE transactions
(
	id INT AUTO_INCREMENT PRIMARY KEY,
	account_id int,
	amount decimal(15,2),
	rxdate datetime,
        FOREIGN KEY FK_cards_transactions(account_id) 
        REFERENCES accounts (account_id)
);

/*
ALTER TABLE transactions   
ADD CONSTRAINT FK_cards_transactions FOREIGN KEY (account_id)     
    REFERENCES accounts (account_id)     
    ON DELETE CASCADE    
    ON UPDATE CASCADE    
;
*/

#GO

/*
CREATE TRIGGER accounts_check_available_balance ON accounts
    FOR UPDATE
    AS
    BEGIN
		declare @new_balance money;
        SELECT @new_balance = balance FROM INSERTED;
		IF @new_balance < '0.00' 
		BEGIN
			RAISERROR ('Balance cannot be negative', 16, 1);
		END;
    END
GO

CREATE PROCEDURE adjust   
    @account_id int,   
    @amount money   
AS   
    BEGIN TRY
		BEGIN TRANSACTION 
			UPDATE accounts set balance = balance + @amount where account_id = @account_id;
			insert into transactions(account_id, amount) values(@account_id, @amount)
		COMMIT
	END TRY
	BEGIN CATCH
		RAISERROR ('Could not adjust balance', 16, 1);
		ROLLBACK;
	END CATCH
GO

*/
